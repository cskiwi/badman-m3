{
  "graph": {
    "nodes": {
      "sync-admin": {
        "name": "sync-admin",
        "type": "lib",
        "data": {
          "root": "libs/frontend/pages/sync-admin",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.js"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/{projectRoot}"
              ],
              "options": {
                "project": "libs/frontend/pages/sync-admin/ng-package.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/pages/sync-admin/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/pages/sync-admin/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/frontend/pages/sync-admin/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "sync-admin",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/sync-admin",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/pages/sync-admin/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-modules-translation": {
        "name": "frontend-modules-translation",
        "type": "lib",
        "data": {
          "root": "libs/frontend/modules/translation",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/modules/translation",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/modules/translation/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/modules/translation"
              ],
              "options": {
                "project": "libs/frontend/modules/translation/ng-package.json",
                "tsConfig": "libs/frontend/modules/translation/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/modules/translation/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/modules/translation/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/modules/translation"
              ],
              "options": {
                "jestConfig": "libs/frontend/modules/translation/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-modules-translation",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-modules-translation",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/modules/translation/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-pages-competition": {
        "name": "frontend-pages-competition",
        "type": "lib",
        "data": {
          "root": "libs/frontend/pages/competition",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/pages/competition",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/pages/competition/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/pages/competition"
              ],
              "options": {
                "project": "libs/frontend/pages/competition/ng-package.json",
                "tsConfig": "libs/frontend/pages/competition/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/pages/competition/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/pages/competition/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/pages/competition"
              ],
              "options": {
                "jestConfig": "libs/frontend/pages/competition/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-pages-competition",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-pages-competition",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/pages/competition/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "sync-worker-e2e": {
        "name": "sync-worker-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/sync-worker-e2e",
          "targets": {
            "lint": {
              "cache": true,
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint",
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/sync-worker-e2e",
                "command": "eslint ."
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{e2eProjectRoot}"
              ],
              "options": {
                "jestConfig": "apps/sync-worker-e2e/jest.config.ts",
                "passWithNoTests": true
              },
              "dependsOn": [
                "sync-worker:build",
                "sync-worker:serve"
              ],
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "sync-worker-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "implicitDependencies": [
            "sync-worker"
          ],
          "tags": []
        }
      },
      "frontend-modules-graphql": {
        "name": "frontend-modules-graphql",
        "type": "lib",
        "data": {
          "root": "libs/frontend/modules/graphql",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/modules/graphql",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/modules/graphql/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/modules/graphql"
              ],
              "options": {
                "project": "libs/frontend/modules/graphql/ng-package.json",
                "tsConfig": "libs/frontend/modules/graphql/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/modules/graphql/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/modules/graphql/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/modules/graphql"
              ],
              "options": {
                "jestConfig": "libs/frontend/modules/graphql/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-modules-graphql",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-modules-graphql",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/modules/graphql/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "backend-tournament-api": {
        "name": "backend-tournament-api",
        "type": "lib",
        "data": {
          "root": "libs/backend/tournament-api",
          "targets": {
            "lint": {
              "cache": true,
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint",
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "libs/backend/tournament-api",
                "command": "eslint ."
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/backend/tournament-api",
                "tsConfig": "libs/backend/tournament-api/tsconfig.lib.json",
                "packageJson": "libs/backend/tournament-api/package.json",
                "main": "libs/backend/tournament-api/src/index.ts",
                "assets": [
                  "libs/backend/tournament-api/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "backend-tournament-api",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/tournament-api",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/backend/tournament-api/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-modules-theme": {
        "name": "frontend-modules-theme",
        "type": "lib",
        "data": {
          "root": "libs/frontend/modules/theme",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/modules/theme",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/modules/theme/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/modules/theme"
              ],
              "options": {
                "project": "libs/frontend/modules/theme/ng-package.json",
                "tsConfig": "libs/frontend/modules/theme/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/modules/theme/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/modules/theme/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/modules/theme"
              ],
              "options": {
                "jestConfig": "libs/frontend/modules/theme/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-modules-theme",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-modules-theme",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/modules/theme/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "sync-worker": {
        "name": "sync-worker",
        "type": "app",
        "data": {
          "root": "apps/sync-worker",
          "targets": {
            "lint": {
              "cache": true,
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint",
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/sync-worker",
                "command": "eslint ."
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "webpack-cli"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist\\sync-worker"
              ],
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Runs Webpack build",
                "help": {
                  "command": "npx webpack-cli build --help",
                  "example": {
                    "options": {
                      "json": "stats.json"
                    },
                    "args": [
                      "--profile"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/sync-worker",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli build"
              },
              "configurations": {
                "development": {
                  "args": [
                    "--node-env=development"
                  ]
                }
              },
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "sync-worker:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "sync-worker:build:development"
                },
                "production": {
                  "buildTarget": "sync-worker:build:production"
                }
              },
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "apps/sync-worker",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "npx webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": [
                        "--client-progress",
                        "--history-api-fallback "
                      ]
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects sync-worker --includeDependentProjects -- npx nx build-deps sync-worker"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "application",
          "metadata": {},
          "name": "sync-worker",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/sync-worker/src",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "backend-authorization": {
        "name": "backend-authorization",
        "type": "lib",
        "data": {
          "root": "libs/backend/authorization",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/backend/authorization",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/backend/authorization/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/backend/authorization",
                "tsConfig": "libs/backend/authorization/tsconfig.lib.json",
                "packageJson": "libs/backend/authorization/package.json",
                "main": "libs/backend/authorization/src/index.ts",
                "assets": [
                  "{projectRoot/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/backend/authorization"
              ],
              "options": {
                "jestConfig": "libs/backend/authorization/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "backend-authorization",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/backend-authorization",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/backend/authorization/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-modules-auth": {
        "name": "frontend-modules-auth",
        "type": "lib",
        "data": {
          "root": "libs/frontend/modules/auth",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/modules/auth",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/modules/auth/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/modules/auth"
              ],
              "options": {
                "project": "libs/frontend/modules/auth/ng-package.json",
                "tsConfig": "libs/frontend/modules/auth/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/modules/auth/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/modules/auth/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/modules/auth"
              ],
              "options": {
                "jestConfig": "libs/frontend/modules/auth/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-modules-auth",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-modules-auth",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/modules/auth/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-pages-player": {
        "name": "frontend-pages-player",
        "type": "lib",
        "data": {
          "root": "libs/frontend/pages/player",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/pages/player",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/pages/player/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/pages/player"
              ],
              "options": {
                "project": "libs/frontend/pages/player/ng-package.json",
                "tsConfig": "libs/frontend/pages/player/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/pages/player/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/pages/player/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/pages/player"
              ],
              "options": {
                "jestConfig": "libs/frontend/pages/player/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-pages-player",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-pages-player",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/pages/player/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-modules-seo": {
        "name": "frontend-modules-seo",
        "type": "lib",
        "data": {
          "root": "libs/frontend/modules/seo",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/modules/seo",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/modules/seo/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/modules/seo"
              ],
              "options": {
                "project": "libs/frontend/modules/seo/ng-package.json",
                "tsConfig": "libs/frontend/modules/seo/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/modules/seo/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/modules/seo/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/modules/seo"
              ],
              "options": {
                "jestConfig": "libs/frontend/modules/seo/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-modules-seo",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-modules-seo",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/modules/seo/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-pages-admin": {
        "name": "frontend-pages-admin",
        "type": "lib",
        "data": {
          "root": "libs/frontend/pages/admin",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/pages/admin",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/pages/admin/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/pages/admin"
              ],
              "options": {
                "project": "libs/frontend/pages/admin/ng-package.json",
                "tsConfig": "libs/frontend/pages/admin/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/pages/admin/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/pages/admin/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/pages/admin"
              ],
              "options": {
                "jestConfig": "libs/frontend/pages/admin/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-pages-admin",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-pages-admin",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/pages/admin/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-components": {
        "name": "frontend-components",
        "type": "lib",
        "data": {
          "root": "libs/frontend/components",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/components",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/components/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/components"
              ],
              "options": {
                "project": "libs/frontend/components/ng-package.json",
                "tsConfig": "libs/frontend/components/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/components/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/components/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "frontend-components",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-components",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/components/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-pages-club": {
        "name": "frontend-pages-club",
        "type": "lib",
        "data": {
          "root": "libs/frontend/pages/club",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/pages/club",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/pages/club/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/pages/club"
              ],
              "options": {
                "project": "libs/frontend/pages/club/ng-package.json",
                "tsConfig": "libs/frontend/pages/club/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/pages/club/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/pages/club/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/pages/club"
              ],
              "options": {
                "jestConfig": "libs/frontend/pages/club/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-pages-club",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-pages-club",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/pages/club/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-pages-home": {
        "name": "frontend-pages-home",
        "type": "lib",
        "data": {
          "root": "libs/frontend/pages/home",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/pages/home",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/pages/home/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/pages/home"
              ],
              "options": {
                "project": "libs/frontend/pages/home/ng-package.json",
                "tsConfig": "libs/frontend/pages/home/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/pages/home/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/pages/home/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/pages/home"
              ],
              "options": {
                "jestConfig": "libs/frontend/pages/home/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-pages-home",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-pages-home",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/pages/home/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "sync": {
        "name": "sync",
        "type": "lib",
        "data": {
          "root": "backend/sync",
          "targets": {
            "lint": {
              "cache": true,
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint",
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "backend/sync",
                "command": "eslint ."
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/backend/sync",
                "tsConfig": "backend/sync/tsconfig.lib.json",
                "packageJson": "backend/sync/package.json",
                "main": "backend/sync/src/index.ts",
                "assets": [
                  "backend/sync/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "sync",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/sync",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "backend/sync/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "backend-translate": {
        "name": "backend-translate",
        "type": "lib",
        "data": {
          "root": "libs/backend/translate",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/backend/translate",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/backend/translate/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/backend/translate"
              ],
              "options": {
                "jestConfig": "libs/backend/translate/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/backend/translate",
                "tsConfig": "libs/backend/translate/tsconfig.lib.json",
                "packageJson": "libs/backend/translate/package.json",
                "main": "libs/backend/translate/src/index.ts",
                "assets": [
                  "{projectRoot/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "backend-translate",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/backend-translate",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/backend/translate/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "root-tournament-api": {
        "name": "root-tournament-api",
        "type": "lib",
        "data": {
          "root": "backend/tournament-api",
          "targets": {
            "lint": {
              "cache": true,
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint",
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "backend/tournament-api",
                "command": "eslint ."
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/backend/tournament-api",
                "tsConfig": "backend/tournament-api/tsconfig.lib.json",
                "packageJson": "backend/tournament-api/package.json",
                "main": "backend/tournament-api/src/index.ts",
                "assets": [
                  "backend/tournament-api/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "root-tournament-api",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/tournament-api",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "backend/tournament-api/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "backend-database": {
        "name": "backend-database",
        "type": "lib",
        "data": {
          "root": "libs/backend/database",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/backend/database",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/backend/database/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/backend/database"
              ],
              "options": {
                "jestConfig": "libs/backend/database/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/backend/database",
                "tsConfig": "libs/backend/database/tsconfig.lib.json",
                "packageJson": "libs/backend/database/package.json",
                "main": "libs/backend/database/src/index.ts",
                "assets": [
                  "{projectRoot/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "migration-generate": {
              "options": {
                "envFile": ".env",
                "command": "ts-node -r tsconfig-paths/register --project libs/backend/database/tsconfig.json ./node_modules/typeorm/cli migration:generate -d libs/backend/database/src/datasource -p libs/backend/database/src/migrations/{args.name}"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "migration-run": {
              "options": {
                "envFile": ".env",
                "command": "ts-node -r tsconfig-paths/register --project libs/backend/database/tsconfig.json ./node_modules/typeorm/cli migration:run -d libs/backend/database/src/datasource"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "migration-revert": {
              "options": {
                "envFile": ".env",
                "command": "ts-node -r tsconfig-paths/register --project libs/backend/database/tsconfig.json ./node_modules/typeorm/cli migration:revert -d libs/backend/database/src/datasource"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "backend-database",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/backend-database",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/backend/database/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "backend-graphql": {
        "name": "backend-graphql",
        "type": "lib",
        "data": {
          "root": "libs/backend/graphql",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/backend/graphql",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/backend/graphql/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/backend/graphql"
              ],
              "options": {
                "jestConfig": "libs/backend/graphql/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/backend/graphql",
                "tsConfig": "libs/backend/graphql/tsconfig.lib.json",
                "packageJson": "libs/backend/graphql/package.json",
                "main": "libs/backend/graphql/src/index.ts",
                "assets": [
                  "{projectRoot/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "backend-graphql",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/backend-graphql",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/backend/graphql/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "backend-shared": {
        "name": "backend-shared",
        "type": "lib",
        "data": {
          "root": "libs/backend/_shared",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/backend/_shared",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/backend/_shared/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/backend/_shared",
                "tsConfig": "libs/backend/_shared/tsconfig.lib.json",
                "packageJson": "libs/backend/_shared/package.json",
                "main": "libs/backend/_shared/src/index.ts",
                "assets": [
                  "libs/backend/_shared/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/backend/_shared"
              ],
              "options": {
                "jestConfig": "libs/backend/_shared/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "backend-shared",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/backend-shared",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/backend/_shared/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "backend-health": {
        "name": "backend-health",
        "type": "lib",
        "data": {
          "root": "libs/backend/health",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/backend/health",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/backend/health/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/backend/health"
              ],
              "options": {
                "jestConfig": "libs/backend/health/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/backend/health",
                "tsConfig": "libs/backend/health/tsconfig.lib.json",
                "packageJson": "libs/backend/health/package.json",
                "main": "libs/backend/health/src/index.ts",
                "assets": [
                  "{projectRoot/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "backend-health",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/backend-health",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/backend/health/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "backend-search": {
        "name": "backend-search",
        "type": "lib",
        "data": {
          "root": "libs/backend/search",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/backend/search",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/backend/search/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/backend/search"
              ],
              "options": {
                "jestConfig": "libs/backend/search/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/backend/search",
                "tsConfig": "libs/backend/search/tsconfig.lib.json",
                "packageJson": "libs/backend/search/package.json",
                "main": "libs/backend/search/src/index.ts",
                "assets": [
                  "{projectRoot/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "backend-search",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/backend-search",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/backend/search/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "frontend-utils": {
        "name": "frontend-utils",
        "type": "lib",
        "data": {
          "root": "libs/frontend/utils",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/frontend/utils",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/frontend/utils/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": [
                "{workspaceRoot}/dist/libs/frontend/utils"
              ],
              "options": {
                "project": "libs/frontend/utils/ng-package.json",
                "tsConfig": "libs/frontend/utils/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/frontend/utils/tsconfig.lib.prod.json"
                },
                "development": {
                  "tsConfig": "libs/frontend/utils/tsconfig.lib.json"
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/frontend/utils"
              ],
              "options": {
                "jestConfig": "libs/frontend/utils/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "frontend-utils",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/frontend-utils",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/frontend/utils/src",
          "prefix": "app",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "models": {
        "name": "models",
        "type": "lib",
        "data": {
          "root": "libs/models/models",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/models/models",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/models/models/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/models/models",
                "tsConfig": "libs/models/models/tsconfig.lib.json",
                "packageJson": "libs/models/models/package.json",
                "main": "libs/models/models/src/index.ts",
                "assets": [
                  "libs/models/models/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/models/models"
              ],
              "options": {
                "jestConfig": "libs/models/models/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "models",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/models",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/models/models/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "backend-seo": {
        "name": "backend-seo",
        "type": "lib",
        "data": {
          "root": "libs/backend/seo",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/backend/seo",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/backend/seo/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/backend/seo"
              ],
              "options": {
                "jestConfig": "libs/backend/seo/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/backend/seo",
                "tsConfig": "libs/backend/seo/tsconfig.lib.json",
                "packageJson": "libs/backend/seo/package.json",
                "main": "libs/backend/seo/src/index.ts",
                "assets": [
                  "{projectRoot/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "backend-seo",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/backend-seo",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/backend/seo/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "enums": {
        "name": "enums",
        "type": "lib",
        "data": {
          "root": "libs/models/enum",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/models/enum",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/models/enum/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/models/enum",
                "main": "libs/models/enum/src/index.ts",
                "tsConfig": "libs/models/enum/tsconfig.lib.json",
                "assets": [
                  "libs/models/enum/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "enums",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/model/enums",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/models/enum/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "app-e2e": {
        "name": "app-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/app-e2e",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci--src/example.spec.ts",
                "e2e-ci"
              ]
            }
          },
          "targets": {
            "e2e": {
              "options": {
                "cwd": "apps/app-e2e",
                "command": "playwright test"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "parallelism": false,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/app-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/app-e2e/playwright-report"
              ],
              "executor": "nx:run-commands",
              "configurations": {}
            },
            "e2e-ci--src/example.spec.ts": {
              "options": {
                "cwd": "apps/app-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "..\\..\\dist\\.playwright\\apps\\app-e2e\\playwright-report\\src-example-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "..\\..\\dist\\.playwright\\apps\\app-e2e\\playwright-report\\src-example-spec-ts"
                },
                "command": "playwright test src/example.spec.ts --output=..\\..\\dist\\.playwright\\apps\\app-e2e\\test-output\\src-example-spec-ts"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in src/example.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "parallelism": false,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/app-e2e/test-output/src-example-spec-ts",
                "{workspaceRoot}/dist/.playwright/apps/app-e2e/playwright-report/src-example-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {}
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/app-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/app-e2e/playwright-report"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/example.spec.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "parallelism": false,
              "configurations": {},
              "options": {}
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "apps/app-e2e/**/*.{js,ts}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.js"
              ]
            }
          },
          "name": "app-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "apps/app-e2e/src",
          "implicitDependencies": [
            "app"
          ],
          "tags": []
        }
      },
      "set-env": {
        "name": "set-env",
        "type": "lib",
        "data": {
          "root": "libs/set-env",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/set-env",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/set-env/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/set-env",
                "main": "libs/set-env/src/index.ts",
                "tsConfig": "libs/set-env/tsconfig.lib.json",
                "assets": [
                  "libs/set-env/*.md",
                  {
                    "input": "./libs/set-env/src",
                    "glob": "**/!(*.ts)",
                    "output": "./src"
                  },
                  {
                    "input": "./libs/set-env/src",
                    "glob": "**/*.d.ts",
                    "output": "./src"
                  },
                  {
                    "input": "./libs/set-env",
                    "glob": "generators.json",
                    "output": "."
                  },
                  {
                    "input": "./libs/set-env",
                    "glob": "executors.json",
                    "output": "."
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/set-env/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "set-env",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/set-env",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/set-env/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "utils": {
        "name": "utils",
        "type": "lib",
        "data": {
          "root": "libs/utils",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/utils",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/libs/utils/eslint.config.js",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/utils",
                "tsConfig": "libs/utils/tsconfig.lib.json",
                "packageJson": "libs/utils/package.json",
                "main": "libs/utils/src/index.ts",
                "assets": [
                  "libs/utils/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/utils"
              ],
              "options": {
                "jestConfig": "libs/utils/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "utils",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@app/utils",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/utils/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "api": {
        "name": "api",
        "type": "app",
        "data": {
          "root": "apps/api",
          "targets": {
            "lint": {
              "cache": true,
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.js",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint",
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/api",
                "command": "eslint ."
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "webpack-cli"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist\\apps\\api"
              ],
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Runs Webpack build",
                "help": {
                  "command": "npx webpack-cli build --help",
                  "example": {
                    "options": {
                      "json": "stats.json"
                    },
                    "args": [
                      "--profile"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/api",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli build"
              },
              "configurations": {
                "development": {
                  "args": [
                    "--node-env=development"
                  ]
                }
              },
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "^build"
              ],
              "options": {
                "buildTarget": "api:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "api:build:development"
                },
                "production": {
                  "buildTarget": "api:build:production"
                }
              },
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "apps/api",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "npx webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": [
                        "--client-progress",
                        "--history-api-fallback "
                      ]
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects api --includeDependentProjects -- npx nx build-deps api"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "application",
          "metadata": {},
          "name": "api",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/api/src",
          "tags": [
            "scope:app"
          ],
          "implicitDependencies": []
        }
      },
      "app": {
        "name": "app",
        "type": "app",
        "data": {
          "root": "apps/app",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci"
              ]
            }
          },
          "targets": {
            "e2e": {
              "options": {
                "cwd": "apps/app",
                "command": "playwright test"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": [
                    "client"
                  ],
                  "target": "serve-static"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/app/test-output"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/app/test-output"
              ],
              "dependsOn": [],
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.js"
              ]
            },
            "build": {
              "executor": "@nx/angular:application",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/app",
                "index": "apps/app/src/index.html",
                "browser": "apps/app/src/main.ts",
                "server": "apps/app/src/main.server.ts",
                "polyfills": [
                  "zone.js"
                ],
                "tsConfig": "apps/app/tsconfig.app.json",
                "inlineStyleLanguage": "scss",
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "apps/app/public"
                  }
                ],
                "styles": [
                  "apps/app/src/styles.scss"
                ],
                "stylePreprocessorOptions": {
                  "includePaths": [
                    "node_modules/"
                  ]
                },
                "externalDependencies": [
                  "@apollo/gateway",
                  "@apollo/subgraph",
                  "@apollo/server",
                  "@as-integrations/fastify",
                  "@mikro-orm/core",
                  "@nestjs/*",
                  "jwks-rsa",
                  "sqlite3",
                  "dotenv",
                  "graphql-type-json",
                  "cache-manager",
                  "class-transformer",
                  "class-validator",
                  "ioredis",
                  "typeorm",
                  "sharp",
                  "canvas",
                  "nestjs-i18n"
                ],
                "scripts": [],
                "prerender": false,
                "ssr": {
                  "entry": "apps/app/server/server.ts"
                }
              },
              "configurations": {
                "production": {
                  "budgets": [
                    {
                      "type": "initial",
                      "maximumWarning": "1mb",
                      "maximumError": "2mb"
                    },
                    {
                      "type": "anyComponentStyle",
                      "maximumWarning": "2kb",
                      "maximumError": "4kb"
                    }
                  ],
                  "outputHashing": "all",
                  "serviceWorker": "apps/app/ngsw-config.json"
                },
                "development": {
                  "optimization": false,
                  "extractLicenses": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "executor": "@nx/angular:dev-server",
              "options": {
                "port": 3000
              },
              "configurations": {
                "production": {
                  "buildTarget": "app:build:production"
                },
                "development": {
                  "buildTarget": "app:build:development",
                  "proxyConfig": "apps/app/proxy.conf.json"
                }
              },
              "defaultConfiguration": "development",
              "continuous": true,
              "parallelism": true
            },
            "extract-i18n": {
              "executor": "@nx/angular:extract-i18n",
              "options": {
                "buildTarget": "app:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/app/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "set-env": {
              "executor": "@app/set-env:set-env",
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "app",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "prefix": "app",
          "sourceRoot": "apps/app/src",
          "tags": [
            "scope:app"
          ],
          "implicitDependencies": [
            "api"
          ]
        }
      }
    },
    "dependencies": {
      "sync-admin": [],
      "frontend-modules-translation": [
        {
          "source": "frontend-modules-translation",
          "target": "frontend-utils",
          "type": "static"
        }
      ],
      "frontend-pages-competition": [
        {
          "source": "frontend-pages-competition",
          "target": "frontend-modules-seo",
          "type": "static"
        },
        {
          "source": "frontend-pages-competition",
          "target": "frontend-components",
          "type": "static"
        },
        {
          "source": "frontend-pages-competition",
          "target": "models",
          "type": "static"
        }
      ],
      "sync-worker-e2e": [
        {
          "source": "sync-worker-e2e",
          "target": "sync-worker",
          "type": "implicit"
        }
      ],
      "frontend-modules-graphql": [
        {
          "source": "frontend-modules-graphql",
          "target": "frontend-utils",
          "type": "static"
        }
      ],
      "backend-tournament-api": [],
      "frontend-modules-theme": [],
      "sync-worker": [
        {
          "source": "sync-worker",
          "target": "sync",
          "type": "static"
        },
        {
          "source": "sync-worker",
          "target": "backend-tournament-api",
          "type": "static"
        }
      ],
      "backend-authorization": [
        {
          "source": "backend-authorization",
          "target": "models",
          "type": "static"
        }
      ],
      "frontend-modules-auth": [
        {
          "source": "frontend-modules-auth",
          "target": "models",
          "type": "static"
        }
      ],
      "frontend-pages-player": [
        {
          "source": "frontend-pages-player",
          "target": "frontend-modules-graphql",
          "type": "static"
        },
        {
          "source": "frontend-pages-player",
          "target": "models",
          "type": "static"
        },
        {
          "source": "frontend-pages-player",
          "target": "frontend-modules-seo",
          "type": "static"
        },
        {
          "source": "frontend-pages-player",
          "target": "frontend-components",
          "type": "static"
        },
        {
          "source": "frontend-pages-player",
          "target": "frontend-modules-auth",
          "type": "static"
        },
        {
          "source": "frontend-pages-player",
          "target": "utils",
          "type": "static"
        }
      ],
      "frontend-modules-seo": [
        {
          "source": "frontend-modules-seo",
          "target": "models",
          "type": "static"
        }
      ],
      "frontend-pages-admin": [
        {
          "source": "frontend-pages-admin",
          "target": "frontend-components",
          "type": "static"
        },
        {
          "source": "frontend-pages-admin",
          "target": "frontend-modules-auth",
          "type": "static"
        }
      ],
      "frontend-components": [
        {
          "source": "frontend-components",
          "target": "frontend-utils",
          "type": "static"
        },
        {
          "source": "frontend-components",
          "target": "models",
          "type": "static"
        },
        {
          "source": "frontend-components",
          "target": "frontend-modules-auth",
          "type": "static"
        },
        {
          "source": "frontend-components",
          "target": "enums",
          "type": "static"
        },
        {
          "source": "frontend-components",
          "target": "frontend-modules-theme",
          "type": "static"
        },
        {
          "source": "frontend-components",
          "target": "frontend-modules-translation",
          "type": "static"
        }
      ],
      "frontend-pages-club": [
        {
          "source": "frontend-pages-club",
          "target": "frontend-modules-seo",
          "type": "static"
        },
        {
          "source": "frontend-pages-club",
          "target": "frontend-components",
          "type": "static"
        },
        {
          "source": "frontend-pages-club",
          "target": "models",
          "type": "static"
        },
        {
          "source": "frontend-pages-club",
          "target": "frontend-utils",
          "type": "static"
        },
        {
          "source": "frontend-pages-club",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "frontend-pages-club",
          "target": "frontend-modules-auth",
          "type": "static"
        },
        {
          "source": "frontend-pages-club",
          "target": "enums",
          "type": "static"
        }
      ],
      "frontend-pages-home": [
        {
          "source": "frontend-pages-home",
          "target": "frontend-components",
          "type": "static"
        },
        {
          "source": "frontend-pages-home",
          "target": "frontend-modules-graphql",
          "type": "static"
        },
        {
          "source": "frontend-pages-home",
          "target": "models",
          "type": "static"
        }
      ],
      "sync": [
        {
          "source": "sync",
          "target": "root-tournament-api",
          "type": "static"
        },
        {
          "source": "sync",
          "target": "backend-tournament-api",
          "type": "static"
        }
      ],
      "backend-translate": [
        {
          "source": "backend-translate",
          "target": "backend-authorization",
          "type": "static"
        },
        {
          "source": "backend-translate",
          "target": "utils",
          "type": "static"
        }
      ],
      "root-tournament-api": [],
      "backend-database": [
        {
          "source": "backend-database",
          "target": "models",
          "type": "static"
        }
      ],
      "backend-graphql": [
        {
          "source": "backend-graphql",
          "target": "models",
          "type": "static"
        },
        {
          "source": "backend-graphql",
          "target": "backend-authorization",
          "type": "static"
        },
        {
          "source": "backend-graphql",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "backend-graphql",
          "target": "backend-search",
          "type": "static"
        },
        {
          "source": "backend-graphql",
          "target": "enums",
          "type": "static"
        }
      ],
      "backend-shared": [
        {
          "source": "backend-shared",
          "target": "backend-authorization",
          "type": "static"
        },
        {
          "source": "backend-shared",
          "target": "backend-database",
          "type": "static"
        },
        {
          "source": "backend-shared",
          "target": "backend-graphql",
          "type": "static"
        },
        {
          "source": "backend-shared",
          "target": "backend-health",
          "type": "static"
        },
        {
          "source": "backend-shared",
          "target": "backend-seo",
          "type": "static"
        },
        {
          "source": "backend-shared",
          "target": "backend-search",
          "type": "static"
        },
        {
          "source": "backend-shared",
          "target": "backend-translate",
          "type": "static"
        }
      ],
      "backend-health": [],
      "backend-search": [
        {
          "source": "backend-search",
          "target": "models",
          "type": "static"
        }
      ],
      "frontend-utils": [],
      "models": [
        {
          "source": "models",
          "target": "enums",
          "type": "static"
        },
        {
          "source": "models",
          "target": "utils",
          "type": "static"
        }
      ],
      "backend-seo": [
        {
          "source": "backend-seo",
          "target": "models",
          "type": "static"
        },
        {
          "source": "backend-seo",
          "target": "enums",
          "type": "static"
        }
      ],
      "enums": [],
      "app-e2e": [
        {
          "source": "app-e2e",
          "target": "app",
          "type": "implicit"
        }
      ],
      "set-env": [],
      "utils": [
        {
          "source": "utils",
          "target": "enums",
          "type": "static"
        }
      ],
      "api": [
        {
          "source": "api",
          "target": "backend-shared",
          "type": "static"
        }
      ],
      "app": [
        {
          "source": "app",
          "target": "api",
          "type": "implicit"
        },
        {
          "source": "app",
          "target": "frontend-modules-auth",
          "type": "static"
        },
        {
          "source": "app",
          "target": "frontend-modules-graphql",
          "type": "static"
        },
        {
          "source": "app",
          "target": "frontend-modules-seo",
          "type": "static"
        },
        {
          "source": "app",
          "target": "frontend-modules-translation",
          "type": "static"
        },
        {
          "source": "app",
          "target": "frontend-utils",
          "type": "static"
        },
        {
          "source": "app",
          "target": "frontend-pages-home",
          "type": "static"
        },
        {
          "source": "app",
          "target": "frontend-pages-player",
          "type": "dynamic"
        },
        {
          "source": "app",
          "target": "frontend-pages-club",
          "type": "dynamic"
        },
        {
          "source": "app",
          "target": "frontend-pages-competition",
          "type": "dynamic"
        },
        {
          "source": "app",
          "target": "frontend-pages-admin",
          "type": "dynamic"
        },
        {
          "source": "app",
          "target": "backend-shared",
          "type": "static"
        },
        {
          "source": "app",
          "target": "frontend-components",
          "type": "static"
        }
      ]
    }
  }
}